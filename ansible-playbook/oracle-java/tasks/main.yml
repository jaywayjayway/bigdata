---
# file: tasks/main.yml
# Top-level installer for Oracle JDK.
#
- name: precondition - java_version
  fail: msg="ERROR - required variable 'java_version' missing."
  when: java_version is not defined

- name: precondition - java_subversion
  fail: msg="ERROR - required variable 'java_subversion' missing."
  when: java_subversion is not defined

- include: set-role-variables.yml

- name: get JDK tarball (as tar.gz file) from http 
  get_url:
    url:     "{{ jdk_tarball_url }}.tar.gz"
    headers: 'Cookie:oraclelicense=accept-securebackup-cookie'
    dest:    "{{ java_download_path }}/{{ jdk_tarball_file }}.tar.gz"
  when: java_download_from_oracle   is defined


- name: copy tarball from local
  copy:
    src: "{{ playbook_dir }}/files/{{ jdk_tarball_file }}.tar.gz"
    dest: "{{ java_download_path }}/{{ jdk_tarball_file }}.tar.gz"
  when:  java_download_from_oracle  is not defined 

- name: mkdir for Java
  file:
    path: "{{ java_install_dir }}/jdk{{ jdk_version }}"
    state: directory
    owner: root
    group: root
    mode: "u=rwx,go=rx"

- name: install JDK via tarball file
  unarchive:
    src: "{{ java_download_path }}/{{ jdk_tarball_file }}.tar.gz"
    dest: "{{ java_install_dir }}"
    owner: root
    group: root
    mode: "go-w"
    copy: no

- name: install libselinux-python binary for Ansible to work
  yum: name=libselinux-python state=present
  when: ansible_pkg_mgr == "yum"

- name: copy scripts to server
  copy: src="../files/check-java-version.sh"  dest="{{ java_download_path }}/"  mode="a+x"

- name: check if specific version of Oracle JDK is installed?
  shell: LC_ALL="en_US.UTF-8"  {{ java_download_path }}/check-java-version.sh  "{{ jdk_version }}"
  register: jdk_info
  changed_when: false
  failed_when: jdk_info.rc > 0
#- debug: var=jdk_info
- include: install.yml
  when: (jdk_info.stdout|from_json).not_found

